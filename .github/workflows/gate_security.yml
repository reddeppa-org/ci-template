name: Security Gating Workflow

on:
  workflow_call:
    inputs:
      repo_owner:
        required: true
        type: string
      repo_name:
        required: true
        type: string
    secrets:
      pat_token:
        required: true

jobs:
  gate-security:
    runs-on: ubuntu-latest
    steps:

      - name: Validate CodeQL alerts (medium and above)
        run: |
          echo "Checking CodeQL alerts with GitHub CLI..."

          repo="${{ inputs.repo_owner }}/${{ inputs.repo_name }}"
          per_page=100
          page=1
          all_alerts="[]"

          while true; do
            response=$(gh api "repos/$repo/code-scanning/alerts" \
              --jq '.' \
              --paginate -H "Accept: application/vnd.github+json" \
              -F state=open \
              -F per_page=$per_page \
              -F page=$page)

            # Ensure it's a JSON array
            if ! echo "$response" | jq -e 'type == "array"' > /dev/null; then
              echo "⚠️ Invalid response. Here's the message:"
              echo "$response" | jq '.message // "No message available."' || echo "$response"
              exit 1
            fi

            # Merge with previous alerts
            all_alerts=$(jq -s '.[0] + .[1]' <(echo "$all_alerts") <(echo "$response"))

            # Break if last page
            if [ "$(echo "$response" | jq 'length')" -lt "$per_page" ]; then
              break
            fi

            ((page++))
          done

          # Filter alerts with medium+ severity
          echo "$all_alerts" | jq '[.[] | select(.rule.severity == "medium" or .rule.severity == "high" or .rule.severity == "critical")]' > codeql_alerts.json

          count=$(jq length codeql_alerts.json)
          echo "Found $count medium+ severity CodeQL alerts"
          if [ "$count" -gt 0 ]; then
            echo "❌ Failing due to CodeQL vulnerabilities"
            exit 1
          fi

      - name: Validate Dependabot alerts
        run: |
          echo "Checking Dependabot alerts..."
          curl -s -H "Authorization: Bearer ${{ secrets.pat_token }}" \
            "https://api.github.com/repos/${{ inputs.repo_owner }}/${{ inputs.repo_name }}/dependabot/alerts?state=open" \
            | jq '[.[]]' > dependabot_alerts.json

          count=$(jq length dependabot_alerts.json)
          echo "Found $count open Dependabot alerts"
          if [ "$count" -gt 0 ]; then
            echo "❌ Failing due to open Dependabot vulnerabilities"
            exit 1
          fi

      - name: Validate Secret Scanning alerts
        run: |
          echo "Checking secret scanning alerts..."
          curl -s -H "Authorization: Bearer ${{ secrets.pat_token }}" \
            "https://api.github.com/repos/${{ inputs.repo_owner }}/${{ inputs.repo_name }}/secret-scanning/alerts?state=open" \
            | jq '[.[]]' > secret_alerts.json

          count=$(jq length secret_alerts.json)
          echo "Found $count open secret scanning alerts"
          if [ "$count" -gt 0 ]; then
            echo "❌ Failing due to secret leaks"
            exit 1
          fi

      - name: ✅ All security checks passed
        run: echo "🎉 No blocking security issues found"